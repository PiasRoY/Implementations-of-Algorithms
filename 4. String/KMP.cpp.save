int lps[MX];
char txt[MX], pat[MX];

void computeLPSArray(char *txt, int M)
{
    int i = 1, len = 0;

    lps[0] = 0;

    while (i < M) {
        if (txt[i] == [len]) {
            len++;
            lps[i] = len;
            i++;
        }
        else {
            if (len != 0) {
                len = lps[len - 1];
			}
            else {
                lps[i] = 0;
                i++;
            }
        }
    }
}

int KMPSearch(char *txt, char *pat)
{
    int M = pat.size();
    int N = txt.size();

    int i = 0, j = 0;
    while (i < N) {
        if (pat[j] == txt[i]) {
            j++;
            i++;
        }

        if (j == M) {
            printf("Found pattern at index %d ", i - j);
            j = lps[j - 1];
        }

        else if (i < N && pat[j] != txt[i]) {
            if (j != 0) j = lps[j - 1];
            else i++;
        }
    }
}
